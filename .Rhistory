for (i in 1:S) {
D <- rbind(D, sample(deck, length(deck), replace = FALSE))
}
D <- matrix(D, S, length(deck))
rm(list=ls())
library(foreign)
rm(list=ls())
setwd("C:/Users/OuHuiyi/Desktop/ECON4274/FinalProject/paper4")
data=read.dta("data2012.dta")
colony=read.dta("C:/Users/OuHuiyi/Desktop/ECON4274/Problem Set/PS3/colony.dta")
View(colony)
View(data)
summary(colony)
data1=read.dta("C:/Users/OuHuiyi/Desktop/ECON4274/FinalProject/colony/maketable1.dta")
data2=read.dta("C:/Users/OuHuiyi/Desktop/ECON4274/FinalProject/colony/maketable2.dta")
setwd("C:/Users/OuHuiyi/Desktop/ECON4274/FinalProject/colony")
library(foreign)
rm(list=ls())
data1=read.dta("maketable1.dta")
data2=read.dta("maketable2.dta")
# table 1 - summary statistics
# whole world
mean(data1$logpgp95)
sumamry(data1)
summary(data1)
data1=read.dta("maketable1.dta")
data2=read.dta("maketable2.dta")
summary(data2)
# table 1 - summary statistics
# whole world
mean(data1$logpgp95, na.rm=T)
stargazer(data1, type="html",out="table1.html")
# table 1 - summary statistics
# whole world
library(stargazer)
stargazer(data1, type="html",out="table1.html")
mean(data1$euro1900, na.rm-T)
mean(data1$euro1900, na.rm=T)
sd(data1$euro1900, na.rm=T)
data1$euro1900 = data1$euro1900/100
mean(data1$euro1900, na.rm=T)
sd(data1$euro1900, na.rm=T)
# base sample
library(tidyverse)
base_sample = data %>% filter(baseco==1)
base_sample = data1 %>% filter(baseco==1)
stargazer(data1, type="html",out="table1_world.html")
stargazer(base_sample, type="html",out="table1_base.html")
hist(base_sample$logem4)
hist(exp(base_sample$logem4))
hist(base_sample$extmort4)
hist(base_sample$extmort4)
percentile
quantile(base_sample$extmort4)
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
quantile = quantile(base_sample$extmort4)
quantile
quantile[1]
quantile[1][1]
quantile[1,1]
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
quantile = as.matrix(quantile(base_sample$extmort4))
quantile[1]
base_sample1 = base_sample %>% mutate(quantile=(
if (extmort4<=quantile[1])
1
else if (extmort4>quantile[1] & extmort4 <= quantile[2])
2
else if(extmort4>quantile[2] & extmort4 <= quantile[3])
3
else if (extmort4>quantile[3])
4))
View(base_sample1)
base_sample1 = data1 %>% mutate(quantile = ntile(extmort4, 4)
base_sample1 = data1 %>% mutate(quantile = ntile(extmort4, 4))
base_sample1 = data1 %>% mutate(quantile = ntile(extmort4, 4))
View(base_sample1)
base_sample1 = base_sample %>% mutate(quantile = ntile(extmort4, 4))
View(base_sample1)
quantile
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
base_sample_p = base_sample %>% mutate(quantile = ntile(extmort4, 4))
rm(base_sample1)
base_sample_p1 = base_sample_p %>% group_by(quantile)
View(base_sample_p1)
stargazer(base_sample_p1, type="html",out="table1_quantile.html")
base_sample_p1 = base_sample_p %>% group_by(quantile)
stargazer(base_sample_p1, type="html",out="table1_quantile.html")
stargazer(base_sample_p1, type="text")
stargazer(base_sample_p, type="text")
stargazer(bs_q1,bs_q2,bs_q3,bs_q4, type="text")
stargazer(bs_q1, type="text")
bs_q1 = base_sample_p %>% filter(quantile=1)
bs_q2 = base_sample_p %>% filter(quantile=2)
bs_q3 = base_sample_p %>% filter(quantile=3)
bs_q4 = base_sample_p %>% filter(quantile=4)
bs_q1 = base_sample_p %>% filter(quantile==1)
bs_q2 = base_sample_p %>% filter(quantile==2)
bs_q3 = base_sample_p %>% filter(quantile==3)
bs_q4 = base_sample_p %>% filter(quantile==4)
stargazer(bs_q1, bs_q2, bs_q3, bs_q4,  type="text")
c(len(bs_q1))
c(length(bs_q1))
c(length(bs_q2))
c(length(bs_q3))
c(nrow(bs_q3))
c(nrow(bs_q1))
c(nrow(bs_q2))
c(nrow(bs_q4))
View(bs_q1)
View(bs_q2)
quantile
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
quantile=as.matrix(quantile(base_sample))
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
quantile=as.matrix(quantile(base_sample, na.rm=T))
quantile
?quantile
rm(quantile)
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
quantile=as.matrix(quantile(base_sample, probs = c(0.25,0.5,0.75), na.rm=T))
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
q=quantile(base_sample, probs = c(0.25,0.5,0.75), na.rm=T)
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
q=quantile(base_sample$extmort4, probs = c(0.25,0.5,0.75), na.rm=T)
q
bs_q1 = base_sample_p %>% filter(extmort4<=q[1])
nrow(bs_q1)
bs_q1 = base_sample_p %>% filter(extmort4<=q[1])
bs_q2 = base_sample_p %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample_p %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample_p %>% filter(extmort4>=q[3])
c(nrow(bs_q1), nrow(bs_q2),nrow(bs_q3),nrow(bs_q4))
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>=q[3])
c(nrow(bs_q1), nrow(bs_q2),nrow(bs_q3),nrow(bs_q4))
rm(base_sample_p)
rm(base_sample_p1)
View(base_sample)
View(bs_q1)
View(bs_q2)
View(bs_q3)
q
View(bs_q4)
View(bs_q3)
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>q[3])
c(nrow(bs_q1), nrow(bs_q2),nrow(bs_q3),nrow(bs_q4))
View(data1)
# remove missing data in short name
data1=complete.cases(data1$shortnam)
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove missing data in short name
complete.cases(data1$shortnam)
# remove missing data in short name
daat1=data1[complete.cases(data1$shortnam),]
rm(daat1)
# remove missing data in short name
data1=data1[complete.cases(data1$shortnam),]
View(data1)
length(data1$shortnam)
sum(is.na(data1$shortnam))
any(is.na(data1$shortnam))
# remove missing data in short name
data1=data1[122:,]
# remove missing data in short name
data1=data1[122:376,]
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove missing data in short name
data1=data1[122:375,]
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove rows with missing data in short name
data1=data1[122:375,]
# drop rows with missing values in all columns
data1 = data1 %>% drop_na(euro1900, logpgp95)
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove rows with missing data in short name
data1=data1[122:375,]
# drop rows with missing values in all columns
data1 = data1 %>% drop_na(euro1900)
View(daat1)
View(data1)
# column 1: whole world
stargazer(data1, type="html",out="table1_world.html")
# divide settlement by 100
data1$euro1900 = data1$euro1900/100
# column 1: whole world
stargazer(data1, type="html",out="table1_world.html")
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
stargazer(base_sample, type="html",out="table1_base.html")
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
q=quantile(base_sample$extmort4, probs = c(0.25,0.5,0.75), na.rm=T)
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>q[3])
q
c(nrow(bs_q1), nrow(bs_q2),nrow(bs_q3),nrow(bs_q4))
stargazer(bs_q1, bs_q2, bs_q3, bs_q4,  type="text")
stargazer(bs_q1, bs_q2, bs_q3, bs_q4,  type="html",output="table1_q.html")
stargazer(base_sample, type="html",out="table1_base.html")
stargazer(bs_q1, bs_q2, bs_q3, bs_q4,  type="html",output="table1_q.html")
stargazer(bs_q1, type="html",output="table1_q1.html")
stargazer(bs_q1, type="html",out="table1_q1.html")
stargazer(bs_q1,bs_q2,bs_q3,bs_q4, type="html",out="table1_q.html")
########## table 1 - summary statistics
rm(list=ls())
data2=read.dta("maketable2.dta")
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
View(data1)
# remove rows with missing data in short name
data1=data1[122:375,]
View(data1)
sum(is.na(data1))
sum(is.na(data1$logpgp95))
254 - 92
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove rows with missing data in short name
data1=data1[122:376,]
View(data1)
# divide settlement by 100
data1$euro1900 = data1$euro1900/100
# column 1: whole world
stargazer(data1, type="html",out="table1_world.html")
View(data1)
255-sum(is.na(logpgp95))
255-sum(is.na(data1$logpgp95))
# remove rows with missing value in GDP
data1=data1[complete.cases(data1$logpgp95),]
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove rows with missing data in short name
data1=data1[122:376,]
library(foreign)
library(stargazer)
library(tidyverse)
data1 = data1[data1$shortnam == data2$shortnam,]
View(data2)
########## table 1 - summary statistics
data1=read.dta("maketable1.dta")
# remove rows with missing data in short name
shortnames = as.matrix(data2$shortnam)
data1 = data1[data1$shortnam == shortnames,]
data1 = data1[data1$shortnam %in% shortnames,]
View(data1)
View(data2)
data1$shortnam
data2$shortnam
data1$shortnam == data2$shortnam
# delete duplicated rows
table(data1$shortnam)
# delete duplicated rows
table(data1$shortnam) > 1
# delete duplicated rows
table(table(data1$shortnam) > 1)
?table
data1 %>% group_by(shortnam) %>% summarise(
num = nrow(data1$euro1900)
)
data1 %>% group_by(shortnam) %>% summarise(
euro1900 = nrow(data1$euro1900)
)
data.frame(table(data1$shortnam))
# delete duplicated rows
nshortnames = data.frame(table(data1$shortnam))
nshortnames[nshortnames$Freq>1,]
dup_names = nshortnames[nshortnames$Freq>1,]
data1[data1$shortnam == "DEU",]
data1[data1$shortnam == "DEU",1]
data1[data1$shortnam == "DEU",][1,:]
data1[data1$shortnam == "DEU",]
data1[data1$shortnam == "YUG",]
data1[data1$shortnam == "ZWE",]
data1=data1[-c(180,369,375),]
data1[data1$shortnam == "DEU",] # remove row 180
data1[c(180,369,375),] = NULL
data1 = data1[-c(180,369,375),]L
data1 = data1[-c(180,369,375),]
data1 = data1[!(180,369,375),]
data1 = data1[-c(180,369,375),]
data1 = data1[-180,]
dup_names = nshortnames[nshortnames$Freq>1,]
dup_names
data1[180,]
data1=read.dta("maketable1.dta")
data2=read.dta("maketable2.dta")
# remove rows with missing data in short name
shortnames = as.matrix(data2$shortnam)
data1 = data1[data1$shortnam %in% shortnames,]
# remove rows with missing data in short name
data1 = data1[data1$shortnam %in% as.matrix(data2$shortnam),]
rm(shortnames)
# delete duplicated rows
nshortnames = data.frame(table(data1$shortnam))
dup_names = nshortnames[nshortnames$Freq>1,]
data1[data1$shortnam == "DEU",] # remove row 180
data1[data1$shortnam == "YUG",] # remove row 369
data1[data1$shortnam == "ZWE",] # remove row 375
View(data())
View(data1
)
daat1[180,]
data1[180,]
data1[1,]
180-124
369-124+1
375-124+1
data1 = data1[-c(57,246,252),]
data1=read.dta("maketable1.dta")
data2=read.dta("maketable2.dta")
# remove rows with missing data in short name
data1 = data1[data1$shortnam %in% as.matrix(data2$shortnam),]
rownames(data1)=NULL
View(data1)
# delete duplicated rows
nshortnames = data.frame(table(data1$shortnam))
dup_names = nshortnames[nshortnames$Freq>1,]
nshortnames[nshortnames$Freq>1,]
data1[data1$shortnam == "DEU",] # remove row 180-124+1=57
data1[data1$shortnam == "YUG",] # remove row 369-124+1=246
data1[data1$shortnam == "ZWE",] # remove row 375-124+1=252
data1 = data1[-c(38,160,166),]
# divide settlement by 100
data1$euro1900 = data1$euro1900/100
# column 1: whole world
stargazer(data1, type="html",out="table1_world.html")
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
stargazer(base_sample, type="html",out="table1_base.html")
# column 3-6: by quantiles of mortality
# quantiles are for base sample of 64 obs
q=quantile(base_sample$extmort4, probs = c(0.25,0.5,0.75), na.rm=T)
q
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>q[3])
ecdf(base_sample$extmort4)(base_sample$extmort4)
base_sample_p = base_sample %>% mutate(
quantile = ecdf(base_sample$extmort4)(base_sample$extmort4))
head(base_sample_p)
base_sample = base_sample %>% mutate(
quantile = ecdf(base_sample$extmort4)(base_sample$extmort4))
rm(base_sample_p)
bs_q1 = base_sample %>% filter(quantile<=0.25)
bs_q2 = base_sample %>% filter(quantile>0.25 & quantile<=0.5)
bs_q3 = base_sample %>% filter(quantile>0.5 & quantile<=0.75)
bs_q4 = base_sample %>% filter(quantile>=0.75)
bs_q1 = base_sample %>% filter(quantile<=0.25)
bs_q2 = base_sample %>% filter(quantile>0.25 & quantile<=0.5)
bs_q3 = base_sample %>% filter(quantile>0.5 & quantile<=0.75)
bs_q4 = base_sample %>% filter(quantile>0.75)
head(bs_q1,15)
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
base_sample = base_sample %>% mutate(
quantile = ntile(extmort4, 100))
head(base_sample)
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
base_sample = base_sample %>% mutate(
quantile = ntile(extmort4, 100)/100)
head(base_sample)
bs_q1 = base_sample %>% filter(quantile<=0.25)
bs_q2 = base_sample %>% filter(quantile>0.25 & quantile<=0.5)
bs_q3 = base_sample %>% filter(quantile>0.5 & quantile<=0.75)
bs_q4 = base_sample %>% filter(quantile>0.75)
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
base_sample = base_sample %>% mutate(
quantile = ecdf(base_sample$extmort4)(base_sample$extmort4))
bs_q1 = base_sample %>% filter(quantile<=0.25)
bs_q2 = base_sample %>% filter(quantile>0.25 & quantile<=0.5)
bs_q3 = base_sample %>% filter(quantile>0.5 & quantile<=0.75)
bs_q4 = base_sample %>% filter(quantile>0.75)
q=quantile(base_sample$extmort4, probs = c(0.25,0.5,0.75), na.rm=T)
q
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>q[3])
# column 2: base sample
base_sample = data1 %>% filter(baseco==1)
q=quantile(base_sample$extmort4, probs = c(0.25,0.5,0.75), na.rm=T)
bs_q1 = base_sample %>% filter(extmort4<=q[1])
bs_q2 = base_sample %>% filter(extmort4>q[1] & extmort4<=q[2])
bs_q3 = base_sample %>% filter(extmort4>q[2] & extmort4<=q[3])
bs_q4 = base_sample %>% filter(extmort4>q[3])
stargazer(bs_q1,bs_q2,bs_q3,bs_q4, type="html",out="table1_q.html")
########## table 1 - summary statistics
rm(list=ls())
data2=read.dta("maketable2.dta")
rm(data2)
world=read.dta("maketable2.dta")
base = world %>% filter(baseco==1)
m1 = lm(logpgp95~avexpr+lat_abst+asia+africa+other, data=world)
sumary(m1)
summary(m1)
m1 = lm(logpgp95~avexpr, data=world)
summary(m1)
m2 = lm(logpgp95~avexpr, data=base)
summary(m2)
m1 = lm(logpgp95~avexpr, data=world)
m2 = lm(logpgp95~avexpr, data=base)
m3 = lm(logpgp95~avexpr+lat_abst, data=world)
m4 = lm(logpgp95~avexpr+lat_abst+asia+africa+other, data=world)
m5 = lm(logpgp95~avexpr+lat_abst, data=base)
m6 = lm(logpgp95~avexpr+lat_abst+asia+africa+other, data=base)
m7 = lm(loghjypl~avexpr, data=world)
m8 = lm(loghjypl~avexpr, data=base)
stargazer(m1,m2,m3,m4,m5,m6,m7,m8, type="html",out="table2.html")
########## table 3 - OLS regression
rm(list=ls())
world=read.dta("maketable3.dta")
world=world %>% filter(excolony==1 & extmort4 != .)
world[world$extmort4 ==.,]
View(world)
world=world %>% filter(excolony==1) %>% drop_na(extmort4)
View(world)
world=read.dta("maketable3.dta")
View(world)
world=world %>% filter(excolony==1) %>% drop_na(extmort4)
View(world)
world$euro1900 = world$euro1900 / 100
# panel A
m1=lm(avexpr~cons00a, data=world)
summary(m1)
m6=lm(avexpr~cons1+lat_abst, data=world)
m1=lm(avexpr~cons00a, data=world)
m2=lm(avexpr~cons00a+lat_abst, data=world)
m3=lm(avexpr~democ00a, data=world)
m4=lm(avexpr~democ00a+lat_abst, data=world)
m5=lm(avexpr~cons1, data=world)
m6=lm(avexpr~cons1+lat_abst, data=world)
m7=lm(avexpr~euro1900, data=world)
m8=lm(avexpr~euro1900+lat_abst, data=world)
m9=lm(avexpr~logem4, data=world)
m10=lm(avexpr~logem4+lat_abst, data=world)
stargazer(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,type="html",out="table3_panelA.html")
# panel B
rm(list=ls())
world=read.dta("maketable2.dta")
base = world %>% filter(baseco==1)
########## table 2 - OLS regression
rm(list=ls())
world=read.dta("maketable3.dta")
# data preprocessing
world=world %>% filter(excolony==1) %>% drop_na(extmort4)
world$euro1900 = world$euro1900 / 100
m1=lm(avexpr~cons00a, data=world)
m2=lm(avexpr~cons00a+lat_abst, data=world)
m3=lm(avexpr~democ00a, data=world)
m4=lm(avexpr~democ00a+lat_abst, data=world)
m5=lm(avexpr~cons1, data=world)
m6=lm(avexpr~cons1+lat_abst, data=world)
m7=lm(avexpr~euro1900, data=world)
m8=lm(avexpr~euro1900+lat_abst, data=world)
m9=lm(avexpr~logem4, data=world)
m10=lm(avexpr~logem4+lat_abst, data=world)
m1=lm(cons00a~euro1900, data=world)
m2=lm(cons00a~euro1900+lat_abst, data=world)
m3=lm(cons00a~logem4, data=world)
m4=lm(cons00a~logem4+lat_abst, data=world)
m5=lm(democ00a~euro1900, data=world)
m6=lm(democ00a~euro1900+lat_abst, data=world)
m7=lm(democ00a~logem4, data=world)
m8=lm(democ00a~logem4+lat_abst, data=world)
m9=lm(euro1900~logem4, data=world)
m10=lm(euro1900~logem4+lat_abst, data=world)
stargazer(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,type="html",out="table3_panelA.html")
m1=lm(avexpr~cons00a, data=world)
m2=lm(avexpr~cons00a+lat_abst, data=world)
m3=lm(avexpr~democ00a, data=world)
m4=lm(avexpr~democ00a+lat_abst, data=world)
m5=lm(avexpr~cons1, data=world)
m6=lm(avexpr~cons1+lat_abst, data=world)
m7=lm(avexpr~euro1900, data=world)
m8=lm(avexpr~euro1900+lat_abst, data=world)
m9=lm(avexpr~logem4, data=world)
m10=lm(avexpr~logem4+lat_abst, data=world)
stargazer(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,type="html",out="table3_panelA.html")
m1=lm(cons00a~euro1900, data=world)
m2=lm(cons00a~euro1900+lat_abst, data=world)
m3=lm(cons00a~logem4, data=world)
m4=lm(cons00a~logem4+lat_abst, data=world)
m5=lm(democ00a~euro1900, data=world)
m6=lm(democ00a~euro1900+lat_abst, data=world)
m7=lm(democ00a~logem4, data=world)
m8=lm(democ00a~logem4+lat_abst, data=world)
m9=lm(euro1900~logem4, data=world)
m10=lm(euro1900~logem4+lat_abst, data=world)
stargazer(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,type="html",out="table3_panelB.html")
